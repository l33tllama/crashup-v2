var currentYearData = [];

// #################### Mapbox map object #########################
function MapBoxMap(mapID){
	this.currentMapName = "";
	this.layer;
	this.heat;
	this.map;
	this.mapID = mapID;
	this.currentYear;
	
	//this.currentYearData = [];
	
	// map names, as generated by Mpabox from GeoJSON
	this.yearMapNames = {
		"2007" : "l33tllama.j6f0kdl9",
		"2008" : "l33tllama.j6bp49i7",
		"2009" : "l33tllama.j6bp97ko",
		"2010" : "l33tllama.j6bpj6ag",
		"2011" : "l33tllama.j6c027p6",
		"2012" : "",
		"2013" : ""
	};
};

// Load map for certain year
MapBoxMap.prototype.loadMapByYear = function(daysInYear, yearData){
	
	//this.currentYearData = [];
	//this.currentMapName = this.yearMapNames[yearStr];
	//console.log(yearData.result.records);
	// Get starting date/year from first record (hope it's right..)
	var startingDate = new Date(yearData.result.records[0]['dt'].substring(0, 4), 0, 1);
	//console.log("Surely 1? " + startingDate.getDOY());
	var fromProj = "+proj=utm +zone=55 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"; 
	var toProj = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs";
	
	// Process data - fill array of days
	/* DOY -> [ {
		'ct': n, 
		'lat': lat, 
		'lon' : lon, 
		'sev' : sev }]
	*/
	// Add crash data per day to be rendered later
	for (var i = 0; i < daysInYear; i++){
		for(var j = 0; j < yearData.result.records.length; j++){
			
			var cDateDOY = new Date(yearData.result.records[j]['dt']).getDOY();
			
			if(cDateDOY == i){
				if(currentYearData[i] == null){
					currentYearData[i] = [];
				}
				//console.log("Adding result for day " + i + " " + yearData.result.records[j]);
				var tmpData =  yearData.result.records[j];
				coords = new proj4(fromProj, toProj, [tmpData.x,tmpData.y]);   //any object will do as long as it has 'x' and 'y' properties
				tmpData.lat = coords[1];
				tmpData.lon = coords[0];
				tmpData.x = null;
				tmpData.y = null;
				if(i == 0){
					console.log("day 0");
				}
				currentYearData[i] = tmpData;
			}
		}	
	}
	
	
	// Default map with no markers
	this.map = L.mapbox.map(this.mapID, 'examples.map-20v6611k', { attributionControl: false, zoomControl: false});
	
	// Move attribution to top left for when in mobile mode when the attribution covers player controls 
	var attributionTop = L.control.attribution({position: 'topright'}).addTo(this.map);
	//var zoomControl = L.control.zoom({position: 'topright'}).addTo(this.map);
	
	this.heat;
	
	// Magic code that saves the day (night)
	if(this.heat != null){
		this.map.removeLayer(this.heat);	
	}
	var thisMap = this.map;
	var me = this;
	
	// Load year layer only once wheen needed! (not once every day..)
	this.layer = L.mapbox.featureLayer('l33tllama.j6f0kdl9').on('ready', function(){
		
		thisMap.fitBounds(this.getBounds());
		
		//var startingDate = new Date(yearStr + " 01 01");
		
		me.renderHeatLayer(startingDate);
		
		var dateStr = pad(startingDate.getDate(), 2);
		var monthStr = pad(startingDate.getMonth()+1, 2);
		//console.log(dateStr + " " +monthStr);
	});
};

MapBoxMap.prototype.renderHeatLayer = function(day){
	
	console.log("Rendering heat for day: " + day);
	// Magic code that saves the day (night)
	if(this.heat != null){
		this.map.removeLayer(this.heat);	
	}
	
	var heat = L.heatLayer([], { maxZoom: 12 }).addTo(this.map);
	
	var me = this;
	
	var dateStr = pad(day.getDate(), 2);
	var monthStr = pad(day.getMonth()+1 , 2);
	
	var range = 5;
	
	// day <range> days ago
	var pastRangeDate = new Date().setDate(day.getDate() - range);
	console.log("day " + range + "days ago: " + pastRangeDate.toString())
	// date object for current layer's date
	//var sliderDate = new Date(me.currentYear + " " + monthStr + " " + dateStr);
	
	var thisDOY = +day.getDOY();
	//var accidentPos = {};
	
	function getLastDaysRange(doy, range){
		for(var i = doy-range; i < range; i++ ){
			if(i > 0 ){
				return i;
			}
		}
	}
	var logged = false;
	var dummyLatLng;
	this.layer.eachLayer(function(l) {
// 		
		// var layerDateStr = l.feature.properties.date;
		// var layerDate = new Date(layerDateStr);
			if (!logged){
				console.log("Proper format: ");
				console.log(l.getLatLng());
				dummyLatLng = l.getLatLng();
				//heat.addLatLng(l.getLatLng());
				logged = true;
			}

 		});	
	//var i = thisDOY+9;
	for(var i = 0; i < 365; i++){
		
		
		var accidentPos = currentYearData[i];
		
		//console.log(i + thisDOY);
		//console.log("i" + i + " thisDOY: " + thisDOY);
		if(currentYearData[i] != undefined){
			console.log("Loading day: " + (i));
			console.log(currentYearData[i]);
			var latLng = {"lat" : currentYearData[i].lat,
							"lng" : currentYearData[i].lon};
							
			dummyLatLng.lat = currentYearData[i].lat;
			dummyLatLng.lon = currentYearData[i].lon;
							
			//var thisWorks ={ lat: -42.881321987572, lng: 147.3328511961707 };
			console.log("LatLgn: ");
			console.log(latLng);
			heat.addLatLng(dummyLatLng);
		}
	}
	//}
	
	// // Add heat points for the particular day
	 
		// // if this date is greater than pastRangeDate and <= day
// 		
		// if(layerDate > pastRangeDate && layerDate <= day){
			// heat.addLatLng(l.getLatLng());
		//});
// 		
		// //console.log(layerDate);
		// // if(layerDate.substring(5,7) == monthStr && layerDate.substring(8,10) == dateStr){
			// // heat.addLatLng(l.getLatLng());
		// // }
		 // // if(l.feature.properties.date.substring(5,7) == "01"){
				// // // heat.addLatLng(l.getLatLng());
// // 				
				// // console.log("Adding heat point:  "+ l.getLatLng());
		// // }
	// });
	
	this.heat = heat;

};